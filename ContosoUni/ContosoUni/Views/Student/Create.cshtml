@model DataAcessLayer.ViewModels.AssociateViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div>
    
    @Html.ActionLink("Back to List", "Index")
    <br />
</div>
<h2>Add Associate</h2>

<div id="divAssociate">
    @using (Ajax.BeginForm("Create", "Associate", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "divAssociate", OnSuccess = "AddEmployeeSuccess", OnBegin = "onAddEditEmployee" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @*<h4>Associate</h4>*@
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.AssociateName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AssociateName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AssociateName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssociatePhone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AssociatePhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AssociatePhone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AssociateAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AssociateAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AssociateAddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Specializations, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.Specializations != null)
                    {
                        @Html.DropDownListFor(m => m.specializationIds, new MultiSelectList(Model.Specializations, "SpecializationId", "SpecializationName"), new { @class = "chzn-select form-control", multiple = "multiple" })
                    }
                    else
                    {
                        @Html.EditorFor(model => model.Specializations, new { htmlAttributes = new { @class = "form-control" } })
                    }
                    @Html.ValidationMessageFor(model => model.Specializations, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary btn-lg col-md-6 col-sm-12"  />
                </div>
            </div>
        </div>
    }

  
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/CreateAssociate.js"></script>

}
<!-- Initialize the plugin: -->
