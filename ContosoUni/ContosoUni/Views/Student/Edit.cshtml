@model DAL.ViewModels.StudentViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    
    @Html.ActionLink("Back to List", "Index")
    <br />
</div>

<h2>Update Associate</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
       @if (!(Model.CourseSummary == "Not specified"))
       {
           
        @Html.HiddenFor(model => model.CourseSummary)
       }

        <div class="form-group">
            @Html.LabelFor(model => model.FirstMidName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstMidName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstMidName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.AssociateAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AssociateAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssociateAddress, "", new { @class = "text-danger" })
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.AvailableCourses, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.AvailableCourses.Count > 0)
                {
                    @Html.DropDownListFor(m => m.SelectedCourses, new MultiSelectList(Model.AvailableCourses, "CourseID", "Title"), new { @class = "chzn-select form-control", multiple = "multiple" })
                    //new MultiSelectList()
                }
                else
                {
                    @Html.EditorFor(model => model.AvailableCourses, new { htmlAttributes = new { @class = "form-control" } })
                }
                @Html.ValidationMessageFor(model => model.AvailableCourses, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary btn-lg col-md-6 col-sm-12" />
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/EditAssociate.js"></script>
}
